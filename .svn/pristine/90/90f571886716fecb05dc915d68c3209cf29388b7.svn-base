package com.damenghai.chahuitong.ui.activity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.widget.AdapterView;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;

import com.damenghai.chahuitong.R;
import com.damenghai.chahuitong.adapter.GridViewImagesAdapter;
import com.damenghai.chahuitong.adapter.StatusCommentAdapter;
import com.damenghai.chahuitong.api.StatusAPI;
import com.damenghai.chahuitong.base.BaseActivity;
import com.damenghai.chahuitong.bean.Comment;
import com.damenghai.chahuitong.bean.ImageUrls;
import com.damenghai.chahuitong.bean.Leader;
import com.damenghai.chahuitong.bean.Status;
import com.damenghai.chahuitong.config.SessionKeeper;
import com.damenghai.chahuitong.request.VolleyRequest;
import com.damenghai.chahuitong.utils.ImageConfigHelper;
import com.damenghai.chahuitong.utils.ShareManager;
import com.damenghai.chahuitong.utils.T;
import com.damenghai.chahuitong.view.TopBar;
import com.damenghai.chahuitong.view.WrapHeightGridView;
import com.google.gson.Gson;
import com.handmark.pulltorefresh.library.PullToRefreshBase;
import com.handmark.pulltorefresh.library.PullToRefreshListView;
import com.lidroid.xutils.BitmapUtils;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.util.ArrayList;

/**
 * 评论
 *
 * Created by Sgun on 15/8/25.
 */
public class StatusDetailActivity extends BaseActivity implements View.OnClickListener {
    private final int REQUEST_CODE_WRITE = 0x200;

    private boolean mScroll2Comment;
    private Status mStatus;

    private TopBar mTopBar;
    private View mHeader;
    private ImageView mAvatar;
    private TextView mUser;
    private TextView mSource;
    private TextView mTitle;
    private TextView mText;
    private TextView mCommentCount;
    private PullToRefreshListView mPlv;

    private LinearLayout mShare;
    private LinearLayout mWrite;
    private LinearLayout mLike;

    private ArrayList<Comment> mData;
    private StatusCommentAdapter mAdapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_status_detail);

        mScroll2Comment = getIntent().getBooleanExtra("scroll2comment", false);
        mStatus = (Status) getIntent().getSerializableExtra("status");

        bindView();

        initView();

        setInfo();

        loadData(1);
    }

    @Override
    protected void bindView() {
        mHeader = View.inflate(StatusDetailActivity.this, R.layout.include_status_header, null);
        mAvatar = (ImageView) mHeader.findViewById(R.id.status_avatar);
        mUser = (TextView) mHeader.findViewById(R.id.status_user);
        mSource = (TextView) mHeader.findViewById(R.id.status_source);
        mTitle = (TextView) mHeader.findViewById(R.id.status_title);
        mText = (TextView) mHeader.findViewById(R.id.status_text);
        mCommentCount = (TextView) mHeader.findViewById(R.id.comment_count);

        mTopBar = (TopBar) findViewById(R.id.comment_bar);
        mPlv = (PullToRefreshListView) findViewById(R.id.comment_lv);
        mShare = (LinearLayout) findViewById(R.id.control_share);
        mWrite = (LinearLayout) findViewById(R.id.control_comment);
        mLike = (LinearLayout) findViewById(R.id.control_like);
    }

    @Override
    protected void initView() {
        mTopBar.setOnButtonClickListener(new TopBar.OnButtonClickListener() {
            @Override
            public void onLeftClick() {
                finishActivity();
            }

            @Override
            public void onRightClick() {

            }
        });

        mHeader.findViewById(R.id.status_controller).setVisibility(View.GONE);
        mAvatar.setVisibility(View.VISIBLE);
        mUser.setVisibility(View.VISIBLE);

        mData = new ArrayList<Comment>();
        mAdapter = new StatusCommentAdapter(this, mData, R.layout.listview_item_comment);
        mPlv.getRefreshableView().addHeaderView(mHeader);
        mPlv.setAdapter(mAdapter);
        mPlv.setOnRefreshListener(new PullToRefreshBase.OnRefreshListener<ListView>() {
            @Override
            public void onRefresh(PullToRefreshBase<ListView> refreshView) {
                loadData(1);
            }
        });

        mShare.setOnClickListener(this);
        mWrite.setOnClickListener(this);
        mLike.setOnClickListener(this);
    }

    private void setInfo() {
        if(mStatus != null) {
            if(mStatus.getMemberInfo() != null) {
                Leader leader = mStatus.getMemberInfo();
                BitmapUtils utils = new BitmapUtils(this);
                utils.display(mAvatar, leader.getMember_avatar(), ImageConfigHelper.getAvatarConfig(StatusDetailActivity.this));
                mUser.setText(leader.getMember_name());
            }
            if(!TextUtils.isEmpty(mStatus.getTitle())) {
                mTitle.setText(mStatus.getTitle());
                mTitle.setVisibility(View.VISIBLE);
            }
            mSource.setText((TextUtils.isEmpty(mStatus.getCreated_at()) ? "" : mStatus.getCreated_at()) + "  来自" + (TextUtils.isEmpty(mStatus.getSource()) ? "Android客户端" : mStatus.getSource()));
            mText.setText(TextUtils.isEmpty(mStatus.getText()) ? "" : mStatus.getText());
            mCommentCount.setText("评论 " + (mStatus.getComment() != 0 ? mStatus.getComment() : ""));
            setImage();
        }
    }

    private void setImage() {
        FrameLayout imgContainer = (FrameLayout) mHeader.findViewById(R.id.status_images);
        WrapHeightGridView gv_images = (WrapHeightGridView) imgContainer.findViewById(R.id.wrap_gridview_images);
        ImageView iv_image = (ImageView) imgContainer.findViewById(R.id.status_iv_item);

        final ArrayList<ImageUrls> picUrls = mStatus.getImageUrls();
        if(picUrls != null && picUrls.size() > 1) {
            imgContainer.setVisibility(View.VISIBLE);
            gv_images.setVisibility(View.VISIBLE);
            iv_image.setVisibility(View.GONE);

            GridViewImagesAdapter mGvAdapter = new GridViewImagesAdapter(StatusDetailActivity.this, picUrls, R.layout.gridview_item_image);
            gv_images.setAdapter(mGvAdapter);
            gv_images.setOnItemClickListener(new AdapterView.OnItemClickListener() {
                @Override
                public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
                    Intent intent = new Intent(StatusDetailActivity.this, ImageBrowserActivity.class);
                    intent.putExtra("pic", picUrls);
                    intent.putExtra("position", i);
                    startActivity(intent);
                }
            });
        } else if(picUrls != null && picUrls.size() == 1) {
            imgContainer.setVisibility(View.VISIBLE);
            gv_images.setVisibility(View.GONE);
            iv_image.setVisibility(View.VISIBLE);

            BitmapUtils bitmapUtils = new BitmapUtils(StatusDetailActivity.this);
            bitmapUtils.display(iv_image, picUrls.get(0).getBmiddle_pic(), ImageConfigHelper.getImageConfig(StatusDetailActivity.this));
            iv_image.setOnClickListener(new View.OnClickListener() {
                @Override
                public void onClick(View view) {
                    Intent intent = new Intent(StatusDetailActivity.this, ImageBrowserActivity.class);
                    intent.putExtra("pic", picUrls);
                    intent.putExtra("position", 1);
                    startActivity(intent);
                }
            });
        } else {
            imgContainer.setVisibility(View.GONE);
        }
    }

    private void loadData(final int page) {
        StatusAPI.commentShow(mStatus.getContent_id(), new VolleyRequest() {
            @Override
            public void onSuccess(String response) {
                super.onSuccess(response);

                if (page == 1) mData.clear();

                try {
                    JSONObject obj = new JSONObject(response);
                    JSONArray array = obj.getJSONArray("content");
                    for (int i = 0; i < array.length(); i++) {
                        Comment comment = new Gson().fromJson(array.get(i).toString(), Comment.class);
                        if (!mData.contains(comment)) mData.add(comment);
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
                mAdapter.notifyDataSetChanged();

                if (mScroll2Comment) {
                    mPlv.getRefreshableView().setSelection(2);
                    mScroll2Comment = false;
                }

            }

            @Override
            public void onAllDone() {
                super.onAllDone();
                mPlv.onRefreshComplete();
            }
        });
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if(resultCode == Activity.RESULT_CANCELED) return;

        if(requestCode == REQUEST_CODE_WRITE && resultCode == Activity.RESULT_OK) {
            T.showShort(StatusDetailActivity.this, "评论成功");
            loadData(1);
        }
    }

    @Override
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.control_share :
                ShareManager.create(StatusDetailActivity.this);
                String title = TextUtils.isEmpty(mStatus.getTitle()) ? "" : mStatus.getTitle();
                String text = TextUtils.isEmpty(mStatus.getText()) ? "" : mStatus.getText();
                ShareManager.setShareContent(StatusDetailActivity.this, mStatus.getThumbImage(), "http://t.cn/RyU8vSP", title, text);
                ShareManager.openShare(StatusDetailActivity.this);
                break;
            case R.id.control_comment :
                if(!SessionKeeper.readSession(StatusDetailActivity.this).equals("")) {
                    Bundle bundle = new Bundle();
                    bundle.putInt("status_id", mStatus.getContent_id());
                    openActivityForResult(WriteCommentActivity.class, REQUEST_CODE_WRITE, bundle);
                } else {
                    openActivity(LoginActivity.class);
                }
                break;
            case R.id.control_like :
                StatusAPI.statusLike(StatusDetailActivity.this, mStatus.getContent_id(), new VolleyRequest() {
                    @Override
                    public void onSuccess(String response) {
                        super.onSuccess(response);
                        try {
                            JSONObject object = new JSONObject(response);
                            T.showShort(StatusDetailActivity.this, object.getString("content"));
                        } catch (JSONException e) {
                            e.printStackTrace();
                        }
                    }
                });
                break;
        }
    }
}
